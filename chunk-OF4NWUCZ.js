import{a as r}from"./chunk-KXRI7F4O.js";import{c as u}from"./chunk-G24K2AOA.js";import{f as a}from"./chunk-AYWYMZFO.js";import{ka as s,oa as i}from"./chunk-QG3GL7MT.js";var y=(()=>{let n=class n{constructor(t,e){this.httpClient=t,this.authService=e}getProfileData(){let t=this.authService.getCurrentUserContext();return this.httpClient.get(r.journeyApi+"/my-account",{headers:{Authorization:`Bearer ${t.accessToken}`}})}saveProfileData(t){let e=this.authService.getCurrentUserContext();return this.httpClient.post(r.journeyApi+"/my-account",t,{headers:{Authorization:`Bearer ${e.accessToken}`,"Content-Type":"application/json"}})}deleteMyAccount(){let t=this.authService.getCurrentUserContext();return this.httpClient.delete(r.journeyApi+"/my-account",{headers:{Authorization:`Bearer ${t.accessToken}`,"Content-Type":"application/json"}})}generateNewQRCode(){let t=this.authService.getCurrentUserContext();return this.httpClient.get(r.journeyApi+"/my-account/securityAttribute/totp",{headers:{Authorization:`Bearer ${t.accessToken}`}})}activateTotp(t){let e=this.authService.getCurrentUserContext();return this.httpClient.post(r.journeyApi+"/my-account/securityAttribute/totp",t,{headers:{Authorization:`Bearer ${e.accessToken}`,"Content-Type":"application/json"}})}getTotpStatus(){let t=this.authService.getCurrentUserContext();return this.httpClient.get(r.journeyApi+"/my-account/securityAttribute/totp/status",{headers:{Authorization:`Bearer ${t.accessToken}`}})}verifyTotpCode(t){let e=this.authService.getCurrentUserContext();return this.httpClient.post(r.journeyApi+"/my-account/securityAttribute/totp/verify",{code:t},{headers:{Authorization:`Bearer ${e.accessToken}`,"Content-Type":"application/json"}})}deactivateTotp(){let t=this.authService.getCurrentUserContext();return this.httpClient.delete(r.journeyApi+"/my-account/securityAttribute/totp",{headers:{Authorization:`Bearer ${t.accessToken}`}})}changeMfaStatus(t){let e=this.authService.getCurrentUserContext();return this.httpClient.post(r.journeyApi+"/my-account/securityAttribute/mfa",{status:t},{headers:{Authorization:`Bearer ${e.accessToken}`}})}changePassword(t){let e=this.authService.getCurrentUserContext();return this.httpClient.post(r.journeyApi+"/my-account/changePassword",{newPassword:t},{headers:{Authorization:`Bearer ${e.accessToken}`}})}};n.\u0275fac=function(e){return new(e||n)(i(a),i(u))},n.\u0275prov=s({token:n,factory:n.\u0275fac,providedIn:"root"});let o=n;return o})();export{y as a};
