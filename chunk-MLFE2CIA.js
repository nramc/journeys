import{ka as c,o as a,y as i}from"./chunk-4YTPSGIK.js";var o=class{constructor(u="",t=!1,e=[],s="",l=new Date){this.name=u,this.isAuthenticated=t,this.roles=e,this.accessToken=s,this.expiredAt=l}};var n=(()=>{class r{static{this.USER_CONTEXT_KEY="_auth"}static saveUserContextInLocalStorage(t){t&&localStorage.setItem(r.USER_CONTEXT_KEY,JSON.stringify(t))}static getUserContextFromLocalStorage(){let t=localStorage.getItem(r.USER_CONTEXT_KEY);if(t){let e=JSON.parse(t);if(Date.now()<Date.parse(e.expiredAt)){let s=new o(e.name,e.isAuthenticated,e.roles,e.accessToken,new Date(Date.parse(e.expiredAt)));return console.log("Local auth context found and valid.",s),s}else r.removeUserContextFromLocalStorage(),console.log("Local auth context found, but not valid. Thus removed from local storage.")}}static removeUserContextFromLocalStorage(){localStorage.removeItem(r.USER_CONTEXT_KEY)}}return r})();var U=(()=>{class r{constructor(){this.user=new o,this.user$=new a(new o);let t=n.getUserContextFromLocalStorage();t&&this.setUserContext(t)}getCurrentUserContext(){return this.user}hasAnyRole(t=[]){return this.getCurrentUserContext().roles.some(e=>t.indexOf(e)!=-1)}isUserAuthenticatedAsObservable(){return this.user$.pipe(i(t=>t.isAuthenticated))}getUserContext(){return this.user$}logout(){n.removeUserContextFromLocalStorage(),this.setUserContext(new o)}getUserContextForSuccessfulLogin(t){let e=new o(t.name,!0,t.authorities,t.token,t.expiredAt);return this.setUserContext(e),e}setUserContext(t){this.user$.next(t),this.user=t,n.saveUserContextInLocalStorage(t)}static{this.\u0275fac=function(e){return new(e||r)}}static{this.\u0275prov=c({token:r,factory:r.\u0275fac,providedIn:"root"})}}return r})();export{o as a,U as b};
