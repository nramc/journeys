import{ja as u,m as i,z as c}from"./chunk-UJMVXANJ.js";var a=function(e){return e.ADMINISTRATOR="ADMINISTRATOR",e.AUTHENTICATED_USER="AUTHENTICATED_USER",e.MAINTAINER="MAINTAINER",e.GUEST_USER="GUEST_USER",e}(a||{});var o=class{constructor(l="",t=!1,r=[],s="",m=new Date){this.name=l,this.isAuthenticated=t,this.roles=r,this.accessToken=s,this.expiredAt=m}};var n=(()=>{class e{static{this.USER_CONTEXT_KEY="_auth"}static saveUserContextInLocalStorage(t){t&&localStorage.setItem(e.USER_CONTEXT_KEY,JSON.stringify(t))}static getUserContextFromLocalStorage(){let t=localStorage.getItem(e.USER_CONTEXT_KEY);if(t){let r=JSON.parse(t);if(Date.now()<Date.parse(r.expiredAt)){let s=new o(r.name,r.isAuthenticated,r.roles,r.accessToken,new Date(Date.parse(r.expiredAt)));return console.log("Local auth context found and valid.",s),s}else e.removeUserContextFromLocalStorage(),console.log("Local auth context found, but not valid. Thus removed from local storage.")}}static removeUserContextFromLocalStorage(){localStorage.removeItem(e.USER_CONTEXT_KEY)}}return e})();var d=(()=>{class e{constructor(){this.user=new o,this.user$=new i(new o);let t=n.getUserContextFromLocalStorage();t&&this.setUserContext(t)}getCurrentUserContext(){return this.user}hasAnyRole(t=[]){return this.getCurrentUserContext().roles.some(r=>t.indexOf(r)!=-1)}hasAuthenticatedRole(){return this.getCurrentUserContext().roles.some(t=>t===a.AUTHENTICATED_USER)}isUserAuthenticatedAsObservable(){return this.user$.pipe(c(t=>t.isAuthenticated))}getUserContext(){return this.user$}logout(){n.removeUserContextFromLocalStorage(),this.setUserContext(new o)}getUserContextForSuccessfulLogin(t){let r=new o(t.name,!0,t.authorities,t.token,t.expiredAt);return this.setUserContext(r),r}setUserContext(t){this.user$.next(t),this.user=t,n.saveUserContextInLocalStorage(t)}static{this.\u0275fac=function(r){return new(r||e)}}static{this.\u0275prov=u({token:e,factory:e.\u0275fac,providedIn:"root"})}}return e})();export{o as a,a as b,d as c};
