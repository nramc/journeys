import{a as r}from"./chunk-6WCMIU77.js";import{b as a}from"./chunk-FVZWZKWT.js";import{c as s}from"./chunk-CBUXQRBC.js";import{ka as i,pa as o}from"./chunk-QA4KX23A.js";var C=(()=>{class n{constructor(t,e){this.httpClient=t,this.authService=e}getProfileData(){let t=this.authService.getCurrentUserContext();return this.httpClient.get(r.journeyApi+"/my-account",{headers:{Authorization:`Bearer ${t.accessToken}`}})}saveProfileData(t){let e=this.authService.getCurrentUserContext();return this.httpClient.post(r.journeyApi+"/my-account",t,{headers:{Authorization:`Bearer ${e.accessToken}`,"Content-Type":"application/json"}})}deleteMyAccount(){let t=this.authService.getCurrentUserContext();return this.httpClient.delete(r.journeyApi+"/my-account",{headers:{Authorization:`Bearer ${t.accessToken}`,"Content-Type":"application/json"}})}generateNewQRCode(){let t=this.authService.getCurrentUserContext();return this.httpClient.get(r.journeyApi+"/my-account/securityAttribute/totp",{headers:{Authorization:`Bearer ${t.accessToken}`}})}activateTotp(t){let e=this.authService.getCurrentUserContext();return this.httpClient.post(r.journeyApi+"/my-account/securityAttribute/totp",t,{headers:{Authorization:`Bearer ${e.accessToken}`,"Content-Type":"application/json"}})}getTotpStatus(){let t=this.authService.getCurrentUserContext();return this.httpClient.get(r.journeyApi+"/my-account/securityAttribute/totp/status",{headers:{Authorization:`Bearer ${t.accessToken}`}})}verifyTotpCode(t){let e=this.authService.getCurrentUserContext();return this.httpClient.post(r.journeyApi+"/my-account/securityAttribute/totp/verify",{code:t},{headers:{Authorization:`Bearer ${e.accessToken}`,"Content-Type":"application/json"}})}deactivateTotp(){let t=this.authService.getCurrentUserContext();return this.httpClient.delete(r.journeyApi+"/my-account/securityAttribute/totp",{headers:{Authorization:`Bearer ${t.accessToken}`}})}changeMfaStatus(t){let e=this.authService.getCurrentUserContext();return this.httpClient.post(r.journeyApi+"/my-account/securityAttribute/mfa",{status:t},{headers:{Authorization:`Bearer ${e.accessToken}`}})}changePassword(t){let e=this.authService.getCurrentUserContext();return this.httpClient.post(r.journeyApi+"/my-account/changePassword",{newPassword:t},{headers:{Authorization:`Bearer ${e.accessToken}`}})}static{this.\u0275fac=function(e){return new(e||n)(o(s),o(a))}}static{this.\u0275prov=i({token:n,factory:n.\u0275fac,providedIn:"root"})}}return n})();export{C as a};
