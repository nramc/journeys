import{ja as l,m as c,z as u}from"./chunk-BQWC7YH4.js";var i=function(o){return o.ADMINISTRATOR="ADMINISTRATOR",o.AUTHENTICATED_USER="AUTHENTICATED_USER",o.MAINTAINER="MAINTAINER",o.GUEST_USER="GUEST_USER",o}(i||{});var s=class{constructor(e="",m=!1,t=[],r="",n=new Date){this.name=e,this.isAuthenticated=m,this.roles=t,this.accessToken=r,this.expiredAt=n}};var a=(()=>{let e=class e{static saveUserContextInLocalStorage(t){t&&localStorage.setItem(e.USER_CONTEXT_KEY,JSON.stringify(t))}static getUserContextFromLocalStorage(){let t=localStorage.getItem(e.USER_CONTEXT_KEY);if(t){let r=JSON.parse(t);if(Date.now()<Date.parse(r.expiredAt)){let n=new s(r.name,r.isAuthenticated,r.roles,r.accessToken,new Date(Date.parse(r.expiredAt)));return console.log("Local auth context found and valid.",n),n}else e.removeUserContextFromLocalStorage(),console.log("Local auth context found, but not valid. Thus removed from local storage.")}}static removeUserContextFromLocalStorage(){localStorage.removeItem(e.USER_CONTEXT_KEY)}};e.USER_CONTEXT_KEY="_auth";let o=e;return o})();var d=(()=>{let e=class e{constructor(){this.user=new s,this.user$=new c(new s);let t=a.getUserContextFromLocalStorage();t&&this.setUserContext(t)}getCurrentUserContext(){return this.user}hasAnyRole(t=[]){return this.getCurrentUserContext().roles.some(r=>t.indexOf(r)!=-1)}hasAuthenticatedRole(){return this.getCurrentUserContext().roles.some(t=>t===i.AUTHENTICATED_USER)}isUserAuthenticatedAsObservable(){return this.user$.pipe(u(t=>t.isAuthenticated))}getUserContext(){return this.user$}logout(){a.removeUserContextFromLocalStorage(),this.setUserContext(new s)}getUserContextForSuccessfulLogin(t){let r=new s(t.name,!0,t.authorities,t.token,t.expiredAt);return this.setUserContext(r),r}setUserContext(t){this.user$.next(t),this.user=t,a.saveUserContextInLocalStorage(t)}};e.\u0275fac=function(r){return new(r||e)},e.\u0275prov=l({token:e,factory:e.\u0275fac,providedIn:"root"});let o=e;return o})();export{s as a,i as b,d as c};
