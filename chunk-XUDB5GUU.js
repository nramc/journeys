import{la as c,p as n,y as i}from"./chunk-HOCLHVTI.js";var o=class{constructor(l="",e=!1,t=[],s="",u=new Date){this.name=l,this.isAuthenticated=e,this.roles=t,this.accessToken=s,this.expiredAt=u}};var a=(()=>{class r{static{this.USER_CONTEXT_KEY="_auth"}static saveUserContextInLocalStorage(e){e&&localStorage.setItem(r.USER_CONTEXT_KEY,JSON.stringify(e))}static getUserContextFromLocalStorage(){let e=localStorage.getItem(r.USER_CONTEXT_KEY);if(e){let t=JSON.parse(e);if(Date.now()<Date.parse(t.expiredAt)){let s=new o(t.name,t.isAuthenticated,t.roles,t.accessToken,new Date(Date.parse(t.expiredAt)));return console.log("Local auth context found and valid.",s),s}else r.removeUserContextFromLocalStorage(),console.log("Local auth context found, but not valid. Thus removed from local storage.")}}static removeUserContextFromLocalStorage(){localStorage.removeItem(r.USER_CONTEXT_KEY)}}return r})();var U=(()=>{class r{constructor(){this.user=new o,this.user$=new n(new o);let e=a.getUserContextFromLocalStorage();e&&this.setUserContext(e)}getCurrentUserContext(){return this.user}hasAnyRole(e=[]){return this.getCurrentUserContext().roles.some(t=>e.indexOf(t)!=-1)}isUserAuthenticatedAsObservable(){return this.user$.pipe(i(e=>e.isAuthenticated))}getUserContext(){return this.user$}logout(){a.removeUserContextFromLocalStorage(),this.setUserContext(new o)}getUserContextForSuccessfulLogin(e){let t=new o(e.name,!0,e.authorities,e.token,e.expiredAt);return this.setUserContext(t),t}setUserContext(e){this.user$.next(e),this.user=e,a.saveUserContextInLocalStorage(e)}static{this.\u0275fac=function(t){return new(t||r)}}static{this.\u0275prov=c({token:r,factory:r.\u0275fac,providedIn:"root"})}}return r})();export{o as a,U as b};
